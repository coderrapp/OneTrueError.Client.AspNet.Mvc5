using System;
using System.Web;
using OneTrueError.Client.Processor;
using OneTrueError.Client.Reporters;

namespace OneTrueError.Client.AspNet.Mvc5.Implementation
{
    /// <summary>
    ///     Context used when collecting error information (when an error have been caught).
    /// </summary>
    public class HttpErrorReporterContext : ErrorReporterContext
    {
        /// <summary>
        ///     Initializes a new instance of the <see cref="HttpErrorReporterContext" /> class.
        /// </summary>
        /// <param name="reporter">The reporter.</param>
        /// <param name="exception">The exception.</param>
        /// <param name="context"></param>
        public HttpErrorReporterContext(object reporter, Exception exception, HttpContextBase context)
            : base(reporter, exception)
        {
            HttpContext = context;
        }

        /// <summary>
        ///     Id generated by OneTrueError
        /// </summary>
        /// <remarks>
        ///     <para>
        ///         Can be used to allow the user to check status of this error through our homepage.
        ///     </para>
        ///     <para>
        ///         You can generate your own ids by customizing <see cref="ReportIdGenerator" />.
        ///     </para>
        /// </remarks>
        public string ErrorId { get; set; }

        /// <summary>
        ///     Gets ASP.NET context
        /// </summary>
        public HttpContextBase HttpContext { get; set; }

        /// <summary>
        ///     Http status code
        /// </summary>
        public int HttpStatusCode { get; set; }

        /// <summary>
        ///     Name for the status code (pascal case)
        /// </summary>
        public string HttpStatusCodeName { get; set; }
    }
}